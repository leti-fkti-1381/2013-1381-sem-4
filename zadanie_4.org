Общие подзадания
   a. Провести экспериментальный анализ их эффективности на графах
   разной степени насыщенности (ребрами). 
   b. Продумать и предложить механизм генерации необходимых для
   эксперимента тестовых данных 
   с. визуализаця алгоритма (важен не размер задачи и время счета, а
   степень понятности и комфортности работы с программой); 
Задания 
1. Реализовать один из трех алгоритмов построения минимального остовного дерева заданного графа
   Алгоритмы
   1. жадный [Kruskal]
   2. ближайшего соседа [Prim;  Dijkstra],
   3. алгоритм со сложностью O(m log n) [Bоruvka]- см.  лекции


2. Двусвязные компоненты.  Реализовать алгоритм нахождения двусвязных
   компонент графа (см. лекции) 

3. Мосты графа.  Мост в связном неориентированном  графе  -  это
   ребро,  удаление которого делает граф несвязным.  Реализовать
   алгоритм нахождения мостов графа (модификацией поиска в глубину из
   задачи  2: ребро {v,w} графа будет мостом тогда и только тогда,
   когда {v,w} является ребром дерева и Low(w)>=NumVert(w)). 
      
4. Топологическая сортировка (ациклического орграфа) на основе поиска
   в глубину. Предусмотреть проверку входного графа на отсутствие
   циклов. 

5. Сильно связные компоненты орграфа.  Реализовать алгоритм
   нахождения сильно связных компонент орграфа (см.  лекции). 
